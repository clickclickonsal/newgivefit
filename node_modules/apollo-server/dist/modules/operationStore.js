"use strict";
const graphql_1 = require('graphql');
const OPERATION_DEFINITION = 'OperationDefinition';
class OperationStore {
    constructor(schema) {
        this.schema = schema;
        this.storedOperations = new Map();
    }
    put(operationDefinition) {
        const ast = graphql_1.parse(operationDefinition);
        function isOperationDefinition(definition) {
            return definition.kind === OPERATION_DEFINITION;
        }
        if (ast.definitions.length > 1) {
            throw new Error('operationDefinition must contain only one definition');
        }
        const definition = ast.definitions[0];
        if (isOperationDefinition(definition)) {
            const validationErrors = graphql_1.validate(this.schema, ast);
            if (validationErrors.length > 0) {
                const messages = validationErrors.map((e) => e.message);
                const e = new Error(`Validation Errors:\n${messages.join('\n')}`);
                e['originalErrors'] = validationErrors;
                throw e;
            }
            this.storedOperations.set(definition.name.value, ast);
        }
        else {
            throw new Error(`operationDefinition must contain an OperationDefinition: ${operationDefinition}`);
        }
    }
    get(operationName) {
        return this.storedOperations.get(operationName);
    }
    delete(operationName) {
        return this.storedOperations.delete(operationName);
    }
    getMap() {
        return this.storedOperations;
    }
}
exports.OperationStore = OperationStore;
//# sourceMappingURL=operationStore.js.map